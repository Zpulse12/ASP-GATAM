stages:
  - test
  - build
  - production-deployment
  - staging-deployment

testing:
  stage: test
  tags: 
    - global
  script:
    - cd './ASP - GATAM ISW-IP/Presentation'
    - |
      for dockerfile in $(find . -name "Dockerfile.test"); do
        echo "Building Docker image for $dockerfile..."
        image_name="test:$(basename $(dirname $dockerfile))"
        docker build -t $image_name -f $dockerfile ../.
        if [ $? -eq 0 ]; then
          echo "Removing Docker image $image_name..."
          docker rmi $image_name
        else
          echo "Docker build failed for $dockerfile. Skipping image removal."
          exit 1
        fi
      done
  # only:
  #   - merge_requests
  # rules:
  #   - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  rules:
    - if: '$CI_COMMIT_BRANCH == "32-technische-taak-merges-getest-worden-voor-we-deze-effectief-kunnen-mergen"'
      when: always
  allow_failure: false 
build:
  stage: build
  tags: 
    - global
  needs: 
    - test
  script:
    - cd './ASP - GATAM ISW-IP/Presentation'
    - |
      for dockerfile in $(find . -name "Dockerfile"); do
        echo "Building Docker image for $dockerfile..."
        image_name="build:$(basename $(dirname $dockerfile))"
        docker build --target build -t $image_name -f $dockerfile ../.
        if [ $? -eq 0 ]; then
          echo "Removing Docker image $image_name..."
          docker rmi $image_name
        else
          echo "Docker build failed for $dockerfile. Skipping image removal."
          exit 1
        fi
      done
  # only:
  #   - merge_requests
  # rules:
  #   - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  rules:
    - if: '$CI_COMMIT_BRANCH == "32-technische-taak-merges-getest-worden-voor-we-deze-effectief-kunnen-mergen"'
      when: always
  allow_failure: false 
production-deploy:
  stage: production-deployment
  tags:
    - production
  script:
    - cp /etc/gatam/.env.production ${CI_PROJECT_DIR}/'ASP - GATAM ISW-IP'/.env.production
    - cd './ASP - GATAM ISW-IP/'
    - docker compose --env-file .env.production -p production -f docker-compose.production.yml down
    - docker compose --env-file .env.production -p production -f docker-compose.production.yml up -d --build 
  rules:
    - if: '$CI_COMMIT_TAG'
  environment: production
staging-deploy:
  stage: staging-deployment
  tags:
    - staging
  script:
    - cp /etc/gatam/.env.staging ${CI_PROJECT_DIR}/'ASP - GATAM ISW-IP'/.env.staging
    - cd './ASP - GATAM ISW-IP/'
    - docker compose --env-file .env.staging -p staging -f docker-compose.staging.yml down
    - docker compose --env-file .env.staging -p staging -f docker-compose.staging.yml up -d --build 
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
      when: always
  environment: staging
