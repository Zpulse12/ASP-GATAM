@page "/content/AssigningModules"
@using Gatam.Application.CQRS
@using Gatam.Application.CQRS.DTOS.ModulesDTO
@using Gatam.Domain
@using Gatam.WebAppBegeleider.Extensions
@using System.Diagnostics
@inject ApiClient ApiClient
@rendermode InteractiveServer
@attribute [Authorize(Policy = "RequireManagementRole")]

<link href="css/assigning-modules.css" rel="stylesheet" />

<CustomCards>
    <div class="card-body">
        <div class="card-header">
            <h5>Wijs Modules toe aan Gebruikers</h5>
        </div>

        @if (IsLoading)
        {
            <div class="text-center">
                <Spinner Class="me-3" Type="SpinnerType.Dots" Color="SpinnerColor.Primary" Size="SpinnerSize.ExtraLarge" />
            </div>
        }
        else
        {
            <div class="mb-3">
                <label>Selecteer Gebruiker:</label>
                <select class="form-select" @onchange="OnUserSelected">
                    <option value="">-- Selecteer een Gebruiker --</option>
                    @foreach (var user in users)
                    {
                        <option value="@user.Id">@user.Email (@user.Id)</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label>Selecteer Module:</label>
                <select class="form-select" @onchange="OnModuleSelected">
                    <option value="">-- Selecteer een Module --</option>
                    @foreach (var module in Modules)
                    {
                        <option value="@module.Id">@module.Title</option>
                    }
                </select>
            </div>

            <button @onclick="AssignModuleToUser" class="btn btn-primary mt-2"
                    disabled="@(string.IsNullOrEmpty(SelectedUserId) || string.IsNullOrEmpty(SelectedModuleId))">
                Wijs Module toe
            </button>

            @if (!string.IsNullOrEmpty(SuccessMessage))
            {
                <div class="alert alert-success mt-3">@SuccessMessage</div>
            }
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger mt-3">@ErrorMessage</div>
            }

            <hr />

            <h5>Gebruikers en Toegewezen Modules</h5>
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Email</th>
                            <th>Gebruiker ID</th>
                            <th>Toegewezen Modules</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (UsersWithModules.Count == 0)
                        {
                            <tr>
                                <td colspan="3" class="text-center">Geen gebruikers gevonden.</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var user in UsersWithModules)
                            {
                                <tr>
                                    <td>@user.Email</td>
                                    <td>@user.Id</td>
                                    <td>
                                        @if (user.Modules != null && user.Modules.Count > 0)
                                        {
                                            <ul class="list-unstyled">
                                                @foreach (var module in user.Modules)
                                                {
                                                    <li>@module</li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <span>Geen modules toegewezen</span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</CustomCards>

@code {
    private List<UserWithModulesDTO> UsersWithModules = new();
    private List<UserDTO> users = new();
    private List<ApplicationModule> Modules = new();
    private string SelectedUserId;
    private string SelectedModuleId;
    private string? SuccessMessage;
    private string? ErrorMessage;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        try
        {
            users = await ApiClient.GetFromJsonAsync<List<UserDTO>>("api/user") ?? new();
            Modules = await ApiClient.GetFromJsonAsync<List<ApplicationModule>>("api/module") ?? new();
        }
        catch (Exception ex)
        {
            ErrorMessage = "Er is een fout opgetreden bij het laden van de data.";
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task AssignModuleToUser()
    {
        if (string.IsNullOrEmpty(SelectedUserId) || string.IsNullOrEmpty(SelectedModuleId))
        {
            ErrorMessage = "Selecteer zowel een gebruiker als een module.";
            SuccessMessage = null;
            return;
        }

        var response = await ApiClient.PutAsJsonAsync($"api/user/AssignUserModule/{SelectedUserId}?moduleId={SelectedModuleId}", new { });

        if (response.IsSuccessStatusCode)
        {
            SuccessMessage = "Module succesvol toegewezen!";
            ErrorMessage = null;
            await OnInitializedAsync();
        }
        else
        {
            var content = await response.Content.ReadAsStringAsync();
            Debug.WriteLine(content);
            ErrorMessage = "Het toewijzen van de module is mislukt.";
            SuccessMessage = null;
        }
    }

    private void OnUserSelected(ChangeEventArgs e)
    {
        SelectedUserId = e.Value?.ToString();
    }

    private void OnModuleSelected(ChangeEventArgs e)
    {
        SelectedModuleId = e.Value?.ToString();
    }
}
