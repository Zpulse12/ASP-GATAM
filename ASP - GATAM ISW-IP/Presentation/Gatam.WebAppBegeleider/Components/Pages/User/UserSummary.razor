@page "/usersummary/{UserId:guid}"
@using System.Diagnostics
@using Gatam.Application.CQRS
@using Gatam.Application.CQRS.DTOS.ModulesDTO
@using Gatam.Domain
@using Gatam.WebAppBegeleider.Extensions
@inject ApiClient ApiClient
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@attribute [Authorize(Policy = "RequireManagementRole")]
@if (_hasError)
    {
        <p>Oops, er liep iets mis</p>
    }
    else if (user != null)
    {
<Tabs EnableFadeEffect="true">
    <Tab Active="true">
        <TitleTemplate>
            <Icon Name="IconName.PersonCircle" /> Volger
        </TitleTemplate>
        <Content>

                <div class="card">
                    <div class="card-header">
                        <h3>Gebruikersinformatie</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label for="name">Voornaam</label>
                            <p id="name">@user.Name</p>
                        </div>
                        <div class="form-group mb-3">
                            <label for="surname">Achternaam</label>
                            <p id="surname">@user.Surname</p>
                        </div>
                        <div class="form-group mb-3">
                            <label for="email">E-mail</label>
                            <p id="email">@user.Email</p>
                        </div>
                        <div class="form-group mb-3">
                            <label for="phoneNumber">Telefoonnummer</label>
                            <p id="phoneNumber">@(!string.IsNullOrEmpty(user.PhoneNumber) ? user.PhoneNumber : "Niet opgegeven")</p>
                        </div>
                        <div class="form-group mb-3">
                            <label for="isActive">Actief</label>
                            <p id="isActive">@((user.IsActive) ? "Ja" : "Nee")</p>
                        </div>
                        <div class="form-group mb-3">
                            <label for="begeleiderId">Begeleider</label>
                            @if(mentor == null)
                            {
                                <p>Volger is nog niet gekoppeld aan een begeleider.</p>
                            }
                            else if(mentor != null)
                            {
                                <p>@mentor.Name @mentor.Surname</p>
                            }
                            else
                            {
                                <p>Er liep iets mis</p>
                            }
                        </div>
                    </div>
                </div>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Book" /> Modules
        </TitleTemplate>
        <Content>
            <div class="card">
                <div class="card-header">
                    <h3>Toegewezen Modules</h3>
                </div>
                <div class="card-body">
                    @if (userModules == null || !userModules.Any())
                    {
                        <p>Er zijn geen modules toegewezen aan deze gebruiker.</p>
                    }
                    else if(userModules != null)
                    {
                        <div class="row">
                            @foreach (var userModule in userModules)
                            {
                                <div class="col-md-4">
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <h5 class="card-title">@userModule.Module?.Title</h5>
                                            <p class="card-text"><b>Categorie:</b> @userModule.Module?.Category</p>
                                        </div>
                                    </div>
                                </div>
                            }
                            </div>
                        }
                        else
                        {
                            <p>Er loopt iets mis</p>
                        }
                    </div>
            </div>
        </Content>
    </Tab>
    <Tab>
        <TitleTemplate>
            <Icon Name="IconName.Gear" /> Beheerder Settings
        </TitleTemplate>
        <Content>
           <Accordion>
                <AccordionItem Title="Toewijzing aanpassen">
        <Content>
            <b>This is the first item's accordion body.</b> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the .accordion-body, though the transition does limit overflow.
        </Content>
    </AccordionItem>
    <AccordionItem Title="Accordion Item #2">
        <Content>
            <b>This is the second item's accordion body.</b> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the .accordion-body, though the transition does limit overflow.
        </Content>
    </AccordionItem>
    <AccordionItem Title="Accordion Item #3">
        <Content>
            <b>This is the third item's accordion body.</b> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the .accordion-body, though the transition does limit overflow.
        </Content>
    </AccordionItem>
</Accordion>
        </Content>
    </Tab>
</Tabs>
    }
@code {
    [Parameter]
    public Guid UserId { get; set; }
    private UserDTO user = new();
    private UserDTO mentor = new();

    private List<UserModuleDTO> userModules = new List<UserModuleDTO>();
    private bool _isLoading = true;
    private bool _hasError = false;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await ApiClient.GetFromJsonAsync<UserDTO>($"/api/user/{UserId}");
            userModules = await ApiClient.GetFromJsonAsync<List<UserModuleDTO>>($"/api/usermodule/user/{UserId}/modules");
            mentor = await ApiClient.GetFromJsonAsync<UserDTO>($"/api/user/{user.BegeleiderId}");

                
        }
        catch (HttpRequestException ex)
        {
            _hasError = true;
        }
        catch (Exception ex)
        {
            _hasError = true;
        }
        finally
        {
            _isLoading = false;
        }
        
    }

}
