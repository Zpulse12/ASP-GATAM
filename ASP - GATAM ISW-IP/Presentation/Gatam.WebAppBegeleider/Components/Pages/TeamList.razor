@page "/admin/teams"
@using Gatam.Application.CQRS
@using Gatam.Domain
@using System.Diagnostics
@using Gatam.WebAppBegeleider.Components.Layout
@inject HttpClient Http
@rendermode InteractiveServer
<CustomCards>
<h3>Teams</h3>
@if (isLoading)
{
    <p>Loading...</p>
}
else if (hasError)
{
    <p>Er is een fout opgetreden bij het ophalen van de teams.</p>
}
else if (teams == null || teams.Count == 0)
{
    <p>Geen teams gevonden.</p>
}
else
{
        @foreach (var team in teams)
        {
            var teamId = team.Id; // Gebruik het team-ID om unieke id's te genereren voor tabs en inhoud

            <div class="team-card border rounded p-3 mb-4">
                <h4>@team.TeamName.ToUpper()</h4>
                <p>Aangemaakt door: @team.TeamCreator.UserName</p>
                <ul class="nav nav-tabs" id="myTab-@teamId" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="acceptedTeamInvite-tab-@teamId" data-bs-toggle="tab" data-bs-target="#acceptedTeamInvite-@teamId" type="button" role="tab" aria-controls="acceptedTeamInvite-@teamId" aria-selected="true">
                            Geaccepteerde Gebruikers
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="pendingTeamInvite-tab-@teamId" data-bs-toggle="tab" data-bs-target="#pendingTeamInvite-@teamId" type="button" role="tab" aria-controls="pendingTeamInvite-@teamId" aria-selected="false">
                            In Afwachting <span class="badge" style="background-color:grey">@team.TeamInvitations.Count(invitation => !invitation.isAccepted)</span>
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="settingTeams-tab-@teamId" data-bs-toggle="tab" data-bs-target="#settingTeams-@teamId" type="button" role="tab" aria-controls="settingTeams-@teamId" aria-selected="false">
                            Instellingen
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="myTabContent-@teamId">
                    <div class="tab-pane fade show active" id="acceptedTeamInvite-@teamId" role="tabpanel" aria-labelledby="acceptedTeamInvite-tab-@teamId">
                        @if (team.TeamInvitations == null || !team.TeamInvitations.Any())
                        {
                            <p>Dit team heeft nog geen studenten.</p>
                        }
                        else
                        {
                            <h5 style="color:black;">Geaccepteerde studenten</h5>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Gebruikersnaam</th>
                                        <th>Emailadres</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var invitation in team.TeamInvitations)
                                    {
                                        @if (invitation.isAccepted)
                                        {
                                            <tr>
                                                <td>@invitation.applicationUser.UserName</td>
                                                <td>@invitation.applicationUser.Email</td>
                                                <td></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        }
                    </div>

                    <div class="tab-pane fade" id="pendingTeamInvite-@teamId" role="tabpanel" aria-labelledby="pendingTeamInvite-tab-@teamId">
                        @if (team.TeamInvitations == null || !team.TeamInvitations.Any())
                        {
                            <p>Dit team heeft nog geen studenten.</p>
                        }
                        else
                        {
                            <h5 style="color: black">Studenten in afwachting</h5>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Gebruikersnaam</th>
                                        <th>Emailadres</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (@team.TeamInvitations.Count(invitation => !invitation.isAccepted) == 0)
                                    {
                                        <p>Geen studenten in afwachting.</p>
                                    }
                                    else{
                                    @foreach (var invitation in team.TeamInvitations)
                                    {
                                       
                                        @if (!invitation.isAccepted)
                                        {
                                            <tr>
                                                <td>@invitation.applicationUser.UserName</td>
                                                <td>@invitation.applicationUser.Email</td>
                                                <td>
                                                    <button class="btn" style="background-color: #4454D2; color:white; font-weight:bold" @onclick="() => ToggleInvitationStatus(invitation,invitation.Id, true)">
                                                        Student toevoegen
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                       
                                    }
                                    }
                                </tbody>
                            </table>
                        }
                    </div>

                    <div class="tab-pane fade" id="settingTeams-@teamId" role="tabpanel" aria-labelledby="settingTeams-tab-@teamId">
                        <!-- Instellingen inhoud hier -->
                    </div>
                </div>
            </div>
        }

}
</CustomCards>

@code {
    private List<ApplicationTeam> teams = new();
    private bool isLoading = true;
    private bool hasError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<ApplicationTeam>>("api/team");
            if (response != null && response.Count > 0)
            {
                teams = response;
            }
        }
        catch (HttpRequestException ex)
        {
            hasError = true;  // Er is een fout opgetreden bij de aanvraag
            Console.WriteLine($"Aanvraagfout: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task ToggleInvitationStatus(TeamInvitation invitation, string invitationId, bool isAccepted)
    {
        Console.WriteLine("Button clicked. Toggling invitation status...");
        Console.WriteLine($"Invitation ID: {invitation.Id}, Accepted: {isAccepted}");
        invitation.isAccepted = isAccepted;
        try
        {
            var command = new AcceptTeamInvitationCommand()
                {
                    _teaminvitationId = invitation.Id,
                    IsAccepted = isAccepted
                };

            var response = await Http.PutAsJsonAsync($"api/invitationteam/acceptInvitation/{invitationId}", command);
            if (response.IsSuccessStatusCode)
            {
                var updatedTeam = await response.Content.ReadFromJsonAsync<ApplicationTeam>();
                if (updatedTeam != null)
                {
                    var invitationRequest = teams
                        .FirstOrDefault(t => t.Id == invitation.ApplicationTeamId)
                        .TeamInvitations.FirstOrDefault(i => i.Id == invitation.Id);

                    if (invitationRequest != null)
                    {
                        invitationRequest.isAccepted = updatedTeam.TeamInvitations.FirstOrDefault(i => i.Id == invitation.Id).isAccepted;
                    }
                    StateHasChanged();
                }
            }
            else
            {
                Console.WriteLine($"Error updating user status: {response.ReasonPhrase}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during status update: {ex.Message}");
        }
    }
}
