@page "/teams"

@using Gatam.Domain
@inject HttpClient Http

<h3>Teams</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (hasError)
{
    <p>Er is een fout opgetreden bij het ophalen van de teams.</p>
}
else if (teams == null || teams.Count == 0)
{
    <p>Geen teams gevonden.</p>
}
else
{
    foreach (var team in teams)
    {
        <div class="team-card">
            <h4>@team.TeamName</h4>
            <p>Team ID: @team.Id</p>

            @if (team.TeamInvitations == null || !team.TeamInvitations.Any())
            {
                <p>Dit team heeft nog geen studenten.</p>
            }
            else
            {
                <p>Uitgenodigde studenten:</p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Gebruikersnaam</th>
                            <th>Emailadres</th>
                            <th>Geaccepteerd</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var invitation in team.TeamInvitations)
                        {
                            <tr>
                                <td>@invitation.applicationUser.UserName</td>
                                <td>@invitation.applicationUser.Email</td>
                                <td>@(invitation.isAccepted ? "Ja" : "Nee")</td>
                            </tr>
                        }

                        @if (!team.TeamInvitations.Any())
                        {
                            <tr>
                                <td colspan="3">Geen uitnodigingen gevonden.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    }
}

@code {
    private List<ApplicationTeam> teams = new();
    private bool isLoading = true;
    private bool hasError = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<ApplicationTeam>>("api/team");
            if (response != null && response.Count > 0)
            {
                teams = response;
            }
        }
        catch (HttpRequestException ex)
        {
            hasError = true;  // Er is een fout opgetreden bij de aanvraag
            Console.WriteLine($"Aanvraagfout: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
