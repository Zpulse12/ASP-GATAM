services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      ACCEPT_EULA: "Y"
    ports: 
      - "1433:1433"
    env_file:
      - .env
    networks:
      - database
    hostname: mssqlserver
  webapi:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAPI/Dockerfile
    container_name: ${ENVIRONMENT}-api
    restart: always
    ports:
      - "5000:8080"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__Loglevel__Default=Debug
      - Logging__Loglevel__Microsoft.AspNetCore=Debug
    depends_on:
      - mssql-server
    networks:
      - database
      - public
    env_file:
      - .env
  webappbegeleider:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppBegeleider/Dockerfile
    container_name: ${ENVIRONMENT}-webappbegeleider
    restart: always
    ports:
      - "5002:8080"
      - "5003:443"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__Loglevel__Default=Debug
      - Logging__Loglevel__Microsoft.AspNetCore=Debug
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - public
  webappvolger:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppVolger/Dockerfile
    container_name: ${ENVIRONMENT}-webappvolger
    restart: always
    ports:
      - "8080"
      - "443"
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - public
volumes:
  sql_data:
networks:
  database:
  public:
    driver: bridge 