services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    container_name: "${ENVIRONMENT}-mssql"
    ports: 
      - "1433:1433"
    environment:
      - ACCEPT_EULA="Y"
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_NAME=Gatam.${ENVIRONMENT}
    networks:
      - database
    hostname: mssqlserver
  webapi:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAPI/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-api
    ports:
      - "5000:8080"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__Loglevel__Default=Debug
      - Logging__Loglevel__Microsoft.AspNetCore=Debug
    depends_on:
      - mssql-server
    networks:
      - database
      - staging-proxy
  webappbegeleider:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppBegeleider/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-webappbegeleider
    ports:
      - "5002:8080"
      - "5003:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Logging__Loglevel__Default=Debug
      - Logging__Loglevel__Microsoft.AspNetCore=Debug
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - staging-proxy
  webappvolger:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppVolger/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-webappvolger
    ports:
      - "8080"
      - "443"
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - staging-proxy
volumes:
  sql_data:
networks:
  database:
   staging-proxy:
    driver: bridge 
    external: true