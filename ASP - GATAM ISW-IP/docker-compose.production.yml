services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ${ENVIRONMENT}-mssql
    restart: always
    ports: 
      - "1433"
    environment:
      - ACCEPT_EULA="Y"
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_NAME=Gatam.${ENVIRONMENT}
    networks:
      - database
    hostname: mssqlserver
  webapi:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAPI/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-api
    ports:
      - "8080"
      - "443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - mssql-server
    networks:
      - database
      - proxy
  webappbegeleider:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppBegeleider/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-webappbegeleider
    ports:
      - "8080"
      - "443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - proxy
  webappvolger:
    build:
      context: .
      dockerfile: ./Presentation/Gatam.WebAppVolger/Dockerfile
    restart: always
    container_name: ${ENVIRONMENT}-webappvolger
    ports:
      - "8080"
      - "443"
    depends_on:
      - webapi
      - mssql-server
    networks:
      - database
      - proxy
  nginx:
    image: nginx:1.27.2-alpine-slim
    container_name: reverseproxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.template
    environment:
      - DOMAIN=${DOMAIN}
      - WEB_PORT=${NGINX_WEBPORT}
    command: /bin/sh -c "envsubst '\$DOMAIN \$WEB_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    ports:
      - "80:80"
    networks: 
      - proxy
    depends_on:
      - webappvolger
      - webappbegeleider
      - webapi
volumes:
  sql_data:
networks:
  database:
  proxy:
    driver: bridge 